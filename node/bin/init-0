#!/bin/bash
# Prepare fresh minimal, clean distro Debian 8 in this case
# wget --no-check-certificate https://busy4.me/init/init-0
# chmod 755 ./init-0
# ./init-0

echo "Cleaning distribution up..... "
echo "Remove packeages and install ssh server...."
#export PATH=$PATH:/root
SCRIPT=init-0
LOGFILE=/var/log/busy4me.log
chmod 666 /var/log/busy4me.log

logline() {
    while IFS= read -r line; do
        echo "$(date +%F' '%T) $SCRIPT - $line" >> $LOGFILE 
    done
}

echo "$(date +%F' '%T) $SCRIPT - Start init-0 script ..." >> $LOGFILE

lsb_release -a | logline
uname -a | logline

if [ $USER != "root" ]
	then
	echo "Run this script as root! exit..." | logline
	exit
fi

USER=busyman
groupadd $USER
useradd $USER -s /bin/bash -m -g $USER

rm_files () {
if [ -z $./var/cache/apt/*.bin ];then
	rm /var/cache/apt/*.bin
fi
if [ -z $./var/cache/debconf/* ];then
	rm /var/cache/debconf/*
fi
if [ -z $./var/cache/apt/archives/*.deb ];then
	rm /var/cache/apt/archives/*.deb
fi
if [ -z $./var/lib/apt/lists/*.* ];then
	rm /var/lib/apt/lists/*.*
fi
if [ -z $./etc/apt/apt.conf ];then
	rm /etc/apt/apt.conf
fi
}
rm_files

echo "create /etc/apt/apt.conf"
echo 'APT::Install-Recommends "false" ; APT::Install-Suggests "false" ;' >> /etc/apt/apt.conf
sleep 1
#add main repo Debian Jessie
rm /etc/apt/sources.list
echo 'deb http://ftp.debian.org/debian jessie main' >> /etc/apt/sources.list
#add main repo SaltStack


sleep 1
echo "configure grub........................................................"
sleep 1
sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="quiet"/GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=0 splash"/g' /etc/default/grub
update-grub
sleep 1
echo "do not show messages durring boot........"
echo "Disable blank console... "

sed -i 's/exit 0//g' /etc/rc.local
printf '%s\n%s\n' 'dmesg --console-off' 'exit 0' >> /etc/rc.local
sed -i 's/#kernel.printk/kernel.printk/g' /etc/sysctl.conf
sed -i 's/#VERBOSE/VERBOSE/g' /etc/default/rcS
sed -i 's/journal+console/journal/g' /lib/systemd/system/systemd-fsck-root.service
sed -i 's/journal+console/journal/g' /lib/systemd/system/systemd-fsck@.service

echo "remove unneeded packages......................................................."
echo "apt-get -qq purge acpi acpid eject"
apt-get -qq purge acpi acpid eject ispell
echo "apt-get -qq purge gcc-4.8-base:amd64 .........................."
apt-get -qq purge gcc-4.8-base:amd64
#echo "apt-get -qq purge gcc-4.9-base:amd64"
#apt-get -qq purge gcc-4.9-base:amd64
echo "apt-get -qq purge gettext-base laptop-detect manpages nano tasksel traceroute usbutils ..."
apt-get -qq purge gettext-base laptop-detect manpages nano tasksel traceroute usbutils
echo "apt-get -qq purge vim-common vim-tiny.................................."
apt-get -qq purge vim-common vim-tiny
echo "rm -rf /usr/share/man/?? && rm -rf /usr/share/man/??_*"
sleep 1
rm -rf /usr/share/man/?? && rm -rf /usr/share/man/??_*

echo "apt-get update && apt-get clean && apt-get install -f --no-install-recommends openssh-server"
sleep 1
apt-get update && apt-get clean
apt-get -qq install -f --no-install-recommends openssh-server dialog
echo "#allow root ssh login,, sed -i 's/without-password/yes/g' /etc/ssh/sshd_config"
sleep 1
sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
echo "apt-get --purge autoremove && apt-get clean.............................................."
sleep 1
apt-get -qq --purge autoremove && apt-get clean

autologin_user () {
echo "Autologin as $USER without login manager..."
sleep 1
mkdir -pv /etc/systemd/system/getty@tty1.service.d
rm /etc/systemd/system/getty@tty1.service.d/autologin.conf
cat > /etc/systemd/system/getty@tty1.service.d/autologin.conf << EOF
[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin $USER --noclear %I $TERM
EOF
}

autologin_root () {
echo "Autologin as root without login manager..."
sleep 1
rm /etc/systemd/system/getty@tty1.service.d/autologin.conf
sed -i 's/--noclear/--autologin root --noclear/g' /lib/systemd/system/getty@.service
}

autostart_user () {
cat > /home/$USER/.profile  << EOF
[[ $(tty) = /dev/tty1 ]] && setterm -blank 0 -powersave off && /root/init-dialog
EOF
chown $USER:$USER /home/busyman/.profile
}

autostart_root () {
cat > /root/.profile  << EOF
[[ $(tty) = /dev/tty1 ]] && setterm -blank 0 -powersave off && /root/init-1
EOF
}

autologin_user
autostart_user

echo "set the correct default.target to ensure the system boots to the console tty1"
sleep 1
systemctl set-default multi-user.target

# and final step in this file, run init-1 (or run init-1 later... cron?)
# ./init-1

# Remove apt cache and files....
rm_files

echo "service sshd reload && service sshd status"
service sshd reload && service sshd status
ip addr | grep eth0
df
echo "New groups:"
getent group $USER
ls -la /opt/$PROJECT

echo "Download init-* files........."
wget -nv --no-check-certificate https://busy4.me/init-1 -O /root/init-1
wget -nv --no-check-certificate https://busy4.me/init-update -O /root/init-update
wget -nv --no-check-certificate https://busy4.me/init-dialog -O /root/init-dialog
chmod +x /root/init-*
cd /root
ls -la /root

echo "All done... To install Xorg and browser run /root/init-1 command ........"


